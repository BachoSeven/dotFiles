#!/usr/bin/env bash

# Franceso Minnocci 2020
# NOTE: This probably only works well with `ncspot` and/or the official client

# Determine currently active spotify player;
# and if there are none, only prompt for opening one (only when trying to open URL/URIs)
if pgrep ncspot &>/dev/null; then
	player="ncspot"
elif pgrep spotify &>/dev/null; then
	player="spotify"
else
	active="false"
fi

terms=kitty:st:alacritty:$TERMINAL
findterm() {
	IFS=:
	for t in $terms; do
		if [ -z "$t" ]; then
			continue
		fi
		check="$(command -v "$t")"
		if [ -n "$check" ]; then
			localt="$t"
			return 0
		fi
		if [ $? -eq 0 ]; then
				return 1
		fi
	done
}

prompt() { #__ cool interactive stuff __#
	if ! $active; then
		player="$(printf "ncspot\nspotify\n" | dmenu -p "Would you like to open:" -f -i -c -l 2 -bw 7 )"
		if [ -n "$player" ]; then
			if [ "$player" = "spotify" ]; then
				gtk-launch spotify
				sleep 3
			elif [ "$player" = "ncspot" ]; then
				findterm &&
				setsid -f $localt --class ncspot -e ncspot	||	# kitty
				setsid -f $localt -c ncspot -e ncspot				||	# st (and others)
				setsid -f $localt -e ncspot	# Fallback to not setting the terminal's class
				sleep 3
			fi
		else
			return 1
		fi
	fi
}

usage() {
	printf "Usage: $(basename $0) [options] <URL|URI> <TIME> \n\n\t-h, --help\tDisplay usage instructions\n\t-n, --next\tNext song\n\t-p, --prev\tPrevious song\n\t-t, --toggle\tPlay/Pause\n\t-s, --stop\tStop\n\t    --pause\tPause song\n\t    --play\tPlay song\n\t-u, --url\tOpen URL\n\t    --uri\tOpen URI (spotify:* format)\n\t    --seek\tSeek/Rewind (seconds)\n\t    --set\tJump to (seconds)\n"
	exit 1
}

send() {
	dbus-send --print-reply --dest=org.mpris.MediaPlayer2."$player" /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player."$1"
	spotup # This updates the spotify module for my dwm status bar, dwmblocks
}

seek() { #__ We need to convert to microseconds __#
	dbus-send --print-reply --dest=org.mpris.MediaPlayer2."$player" /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Seek int64:"$1"000000
}

setPos() { #__ Here we also need to specify objpath __#
	dbus-send --print-reply --dest=org.mpris.MediaPlayer2."$player" /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.SetPosition objpath:'/3' int64:"$1"000000
															# /3 is mpris:trackid from Metadata
}

url() { #__ Some parsing logic for URLs __#
	prompt
	if [ -z "$*" ]; then
		usage
	fi
	string="$(echo $* | rev | cut -d/ -f1-2 | rev)"
	typ="${string%/*}"
	key="${string#*/}"
	dbus-send --print-reply --dest=org.mpris.MediaPlayer2."$player" /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.OpenUri string:spotify:$typ:$key
	sleep 2 && spotup
}

uri() { #__ This is slightly more complex because spotify would like to include additional context after the item key, which ncspot does not support... __#
	prompt
	typ="$(echo "$*" | cut -d":" -f1,2)"
	key="$(echo "$*" | cut -d":" -f3 | head --bytes=22)"
	dbus-send --print-reply --dest=org.mpris.MediaPlayer2."$player" /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.OpenUri string:"$typ:$key"
	sleep 2 && spotup
}

error() {
	printf "$@\n\n" 1>&2
	usage
}

if [ -z "$1" ] ; then
	error "No arguments given, exiting..."
else
	case $1 in
	-h|--help)
		usage;;
	-n|--next)
		send Next;;
	-p|--prev)
		send Previous;;
	-s|--stop)
		send Stop;;
	-t|--toggle)
		send PlayPause;;
	--play)
		send Play;;
	--pause)
		send Pause;;
	--seek)
		seek "$2";;
	--set)
		setPos "$2";;
	-u|--url)
		url "$2";;
	--uri)
		uri "$2";;
	*)
		error "Invalid option: $1";;
	esac
fi

## TODO: Metadata to display in bar:
	#  dbus-send --print-reply --dest=org.mpris.MediaPlayer2."$player"	      \
	 # /org/mpris/MediaPlayer2 org.freedesktop.DBus.Properties.Get		      \
	 # string:"org.mpris.MediaPlayer2.Player" string:'Metadata'		      \
	 # | grep -Ev "^method"                           `# Ignore the first line.`   \
	 # | grep -Eo '("(.*)")|(\b[0-9][a-zA-Z0-9.]*\b)' `# Filter interesting fiels.`\
	 # | sed -E '2~2 a|'                              `# Mark odd fields.`         \
	 # | tr -d '\n'                                   `# Remove all newlines.`     \
	 # | sed -E 's/\|/\n/g'                           `# Restore newlines.`        \
	 # | sed -E 's/(xesam:)|(mpris:)//'               `# Remove ns prefixes.`      \
	 # | sed -E 's/^"//'                              `# Strip leading...`         \
	 # | sed -E 's/"$//'                              `# ...and trailing quotes.`  \
	 # | sed -E 's/"+/|/'                             `# Regard "" as seperator.`  \
	 # | sed -E 's/ +/ /g'                            `# Merge consecutive spaces.`\
	 # [...] take what you need.

	# Also:
	# dbus-send --print-reply --dest=org.mpris.MediaPlayer2."$player"	/org/mpris/MediaPlayer2 org.freedesktop.DBus.Properties.Get string:"org.mpris.MediaPlayer2.Player" string:'Metadata' |
	# grep -Ev "^method" `# Ignore the first line.` | \grep -Eo '("(.*)")|(\b[0-9][a-zA-Z0-9.]*\b)' `# Filter interesting fiels.`\
	# | sed -E '2~2 a|' `# Mark odd fields.` | tr -d '\n' `# Remove all newlines.` | sed -E 's/\|/\n/g' `# Restore newlines.` | sed -E 's/(xesam:)|(mpris:)//' `# Remove ns prefixes.` |
	# sed -E 's/^"//' `# Strip leading...` | sed -E 's/"$//' `# ...and trailing quotes.` | sed -E 's/"+/|/' `# Regard "" as seperator.` | sed -E 's/ +/ /g' `# Merge consecutive spaces.`\
	# |grep -vE "discNumber|length|trackid|url|trackNumber|albumArtist"
