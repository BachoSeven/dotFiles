#!/bin/sh

# 2020 Francesco Minnocci <ascoli.minnocci@gmail.com>
#
# POSIX compliant script to set images or gif animations as a desktop background,
# supports using pywal to extract a colorscheme for Xresources and (neo)vim.
#
# If given a directory as input, `sbg` will choose a random picture/gif for you.
#
# SLOC: 28
#
# Dependencies: `hsetroot`
# Optional: [`gifsicle` + `shantz-xwinwrap-bzr` + `hsetroot` + custom `gifbg` and `extcol` scripts] for GIFs;
#           [`pywal` + custom `vimwal` script] for integration with `wal` and with `wal.vim`
#
# NOTE: I also use a custom `dunstreload` script to automatically reload `dunst` notifications setting colors generated by wal if and only if `wal` was activated.
#
#
# Usage:
#		` $0 [ -i, -input "path/to/img" ] [ -m, -maximize ] [ -t, -tile ] [ -w, -wal "backend" "path/to/img" ] `
#
# NOTE: -w and -i are supposed to be mutually exclusive

bgloc="${XDG_DATA_HOME:-$HOME/.local/share/}"/bg
pgrep xwinwrap &&	killall -q xwinwrap 2>/dev/null
pgrep xrootgif &&	killall -q xrootgif 2>/dev/null && hsetroot -solid "#151515"

# Parsing logic
while getopts ":hi:w:mtc" o; do
	case "${o}" in
		h) printf "Usage :\\n'$0'\\n\\t [ -i, -input \"path/to/img\" ]\\n\\t [ -m, -maximize: maximize wallpaper ( default format is \"--zoom\" ) ]\\n\\t [ -t, -tile ]\\n\\t [ -c, -center ]\\n\\t [ -w, -wal \"path/to/img\" \"backend\" : use pywal if installed ]\\n\\t [ -h, -help: Show this message ]\\n" && exit 0 ;;

		i)
			vimwal -x && dunstreload
			[ -f "$2" ] && ln -sf "$(readlink -f "$2")" "$bgloc" >/dev/null 2>&1 && notify-send -i "$bgloc" "Wallpaper changed."
			[ -d "$2" ] && ln -sf "$( find "$(readlink -f "$2")" -iregex '.*.\(jpg\|jpeg\|png\|gif\)' -type f | shuf -n 1)" "$bgloc" >/dev/null 2>&1 && notify-send -i "$bgloc" "choosing a nice wallpaper for ya..."
			xrdb -load "$XDG_CONFIG_HOME/X11/Xresources" ;;

		w)
			vimwal -w && dunstreload
			if [ -f "$2" ]; then
				ln -sf "$(readlink -f "$2")" "$bgloc" >/dev/null 2>&1 && notify-send -i "$bgloc" "Wallpaper changed."
				backend="${wal}"
			else
				backend="$2"
				[ -z "$3" ] && [ -f "$3" ] && ln -sf "$(readlink -f "$3")" "$bgloc" >/dev/null 2>&1 && notify-send -i "$bgloc" "Wallpaper changed."
			fi
			command -v wal >/dev/null 2>&1 && wal -c && wal --backend "$backend" -i "$(readlink -f "$bgloc")" >/dev/null 2>&1 ;;

		m) format="-full" ;;

		t) format="-tile" ;;

		c) format="-center" ;;

		*) printf "Invalid option: -%s\\n" "$OPTARG" && exit 1 ;;
	esac
done

# Use gifview for gifs, or else hsetroot
	if [ ! -f ~/.cache/wal/active ]; then
		mime="$( file --dereference --brief --mime-type -- "$bgloc" )"
		if [ "$mime" = "image/gif" ]; then
			setsid -f gifbg "$bgloc" && exit 0
		else
			hsetroot "${format:--cover}" "$bgloc" >/dev/null
		fi
	fi
