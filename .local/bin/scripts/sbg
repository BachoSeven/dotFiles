#!/bin/sh

# 2020 Francesco Minnocci <ascoli.minnocci@gmail.com>
#
# POSIX compliant script to set images or gif animations as a desktop background,
# supports using pywal to extract a colorscheme for Xresources and (neo)vim.
#
# If given a directory as input, `sbg` will choose a random picture/gif for you.
#
# SLOC: 33
#
# Dependencies:
#	- `hsetroot`
# Optional:
#	- [`gifsicle` + `shantz-xwinwrap-bzr` + custom `gifbg` and `extcol` scripts] for GIFs;
# -	[`pywal` + custom `vimwal` script] for integration with `wal` and with `wal.vim`
#	NOTE:
# - I also use a custom `ifinstalled` script to notify about missing programs
#	-	`-w` and `-i` are supposed to be mutually exclusive

linknotif() {
	[ -f "$1" ] && ln -sf "$(realpath "$1")" "$bgloc" >/dev/null 2>&1 && notify-send -i "$bgloc" "Wallpaper changed."
	[ -d "$1" ] && ln -sf "$( find "$(realpath "$1")" -iregex '.*.\(jpg\|jpeg\|png\|gif\)' -type f | shuf -n 1)" "$bgloc" >/dev/null 2>&1 && notify-send -i "$bgloc" "choosing a nice wallpaper for ya..."
}

# Initialize target location
bgloc="${XDG_DATA_HOME:-$HOME/.local/share/}"/bg

# Cleanup the root window
pgrep xwinwrap &>/dev/null &&	killall -q xwinwrap
pgrep xrootgif &>/dev/null &&	killall -q xrootgif

while getopts ":hi:w:cmt" o; do
	case "${o}" in
		h) printf "Usage :\\n'$0'\\n\\t [ -h, -help: Show this message ]\\n\\t [ -i, -input \"path/to/img\" ]\\n\\t [ -w, -wal \"path/to/img\" \"backend\" : use pywal if installed ]\\n\\t [ -c, -center ]\\n\\t [ -m, -maximize: maximize wallpaper ( default format is \"--zoom\" ) ]\\n\\t [ -t, -tile ]\\n" && exit 0 ;;

		i)
			vimwal -x
			linknotif "$2"
			xrdb -load "$XDG_CONFIG_HOME/X11/Xresources" ;;

		w)
			linknotif "$2"
			if [ -n "$2" ]; then backend="$2"; [ -f "$3" ] && linknotif "$3"; fi
			wal -c && wal --backend "${backend:-wal}" -i "$(realpath "$bgloc")" >/dev/null 2>&1 && ifinstalled python-pywal && vimwal -w || exit 1 ;;

		c) full=false; format="-center" ;;
		m) full=false; format="-full" ;;

		t) format="-tile" ;;

		*) printf "Invalid option: -%s\\n" "$OPTARG" && exit 1 ;;
	esac
done

# Use gifview for gifs, or else use hsetroot
mime="$( file --dereference --brief --mime-type -- "$bgloc" )"
if [ "$mime" = "image/gif" ]; then
	setsid -f gifbg "$bgloc"
else
	$full || bgcol="$(imgextcol "$bgloc")"
	hsetroot -solid "${bgcol:-#282828}" "${format:--cover}" "$bgloc" >/dev/null
fi
